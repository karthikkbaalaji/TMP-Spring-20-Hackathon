{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","App","state","search","onSearch","event","_this","setState","target","value","_this2","this","react_default","a","createElement","input_search","onChange","console","log","placeholder","assistiveText","label","headerButton","components_button","icon_settings","iconPath","global_navigation_bar","region","app_launcher","triggerName","modalHeaderButton","expandable_section","title","tile","description","iconText","iconBackgroundColor","app_launcher_link","Component","displayName","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.aa0f56a8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport AppLauncher from '@salesforce/design-system-react/components/app-launcher';\nimport AppLauncherLink from '@salesforce/design-system-react/components/app-launcher/link';\nimport AppLauncherTile from '@salesforce/design-system-react/components/app-launcher/tile';\nimport AppLauncherExpandableSection from '@salesforce/design-system-react/components/app-launcher/expandable-section';\n\nimport GlobalNavigationBar from '@salesforce/design-system-react/components/global-navigation-bar';\nimport GlobalNavigationBarRegion from '@salesforce/design-system-react/components/global-navigation-bar/region';\n\nimport Button from '@salesforce/design-system-react/components/button';\nimport Search from '@salesforce/design-system-react/components/input/search';\nimport IconSettings from '@salesforce/design-system-react/components/icon-settings';\n\n\nclass App extends Component {\n  static displayName = 'AppLauncherExample';\n\n\tstate = {\n\t\tsearch: '',\n\t};\n\n\tonSearch = (event) => {\n\t\tthis.setState({ search: event.target.value });\n\t};\n\n\trender() {\n\t\tconst search = (\n\t\t\t<Search\n\t\t\t\tonChange={(event) => {\n\t\t\t\t\tconsole.log('Search term:', event.target.value);\n\t\t\t\t\tthis.onSearch(event);\n\t\t\t\t}}\n\t\t\t\tplaceholder=\"Find an app\"\n\t\t\t\tassistiveText={{ label: 'Find an app' }}\n\t\t\t/>\n\t\t);\n\t\tconst headerButton = <Button label=\"App Exchange\" />;\n\n\t\treturn (\n\t\t\t<IconSettings iconPath=\"/assets/icons\">\n\t\t\t\t<GlobalNavigationBar>\n\t\t\t\t\t<GlobalNavigationBarRegion region=\"primary\">\n\t\t\t\t\t\t<AppLauncher\n\t\t\t\t\t\t\ttriggerName=\"App Name\"\n\t\t\t\t\t\t\tsearch={search}\n\t\t\t\t\t\t\tmodalHeaderButton={headerButton}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<AppLauncherExpandableSection title=\"Tile Section\">\n\t\t\t\t\t\t\t\t<AppLauncherTile\n\t\t\t\t\t\t\t\t\tdescription=\"The primary internal Salesforce org. Used to run our online sales business and manage accounts.\"\n\t\t\t\t\t\t\t\t\ticonText=\"SC\"\n\t\t\t\t\t\t\t\t\tsearch={this.state.search}\n\t\t\t\t\t\t\t\t\ttitle=\"Sales Cloud\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<AppLauncherTile\n\t\t\t\t\t\t\t\t\tdescription=\"Salesforce Marketing Cloud lets businesses of any size engage with their customers through multiple channels of messaging.\"\n\t\t\t\t\t\t\t\t\ticonBackgroundColor=\"#e0cf76\"\n\t\t\t\t\t\t\t\t\ticonText=\"MC\"\n\t\t\t\t\t\t\t\t\tsearch={this.state.search}\n\t\t\t\t\t\t\t\t\ttitle=\"Marketing Cloud\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<AppLauncherTile\n\t\t\t\t\t\t\t\t\tdescription=\"Community for managing employee benefits and time off.\"\n\t\t\t\t\t\t\t\t\ticonBackgroundColor=\"#6a8adc\"\n\t\t\t\t\t\t\t\t\ticonText=\"HR\"\n\t\t\t\t\t\t\t\t\tsearch={this.state.search}\n\t\t\t\t\t\t\t\t\ttitle=\"HR Concierge\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<AppLauncherTile\n\t\t\t\t\t\t\t\t\tdescription=\"Manage your finances across multiple financial platforms and make the most of your capital.\"\n\t\t\t\t\t\t\t\t\ticonBackgroundColor=\"#73c07b\"\n\t\t\t\t\t\t\t\t\ticonText=\"MM\"\n\t\t\t\t\t\t\t\t\tsearch={this.state.search}\n\t\t\t\t\t\t\t\t\ttitle=\"My Money\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<AppLauncherTile\n\t\t\t\t\t\t\t\t\tdescription=\"The key to call center and contact center management is more simple than you think with this amazing application!\"\n\t\t\t\t\t\t\t\t\ticonBackgroundColor=\"#b67e6a\"\n\t\t\t\t\t\t\t\t\ticonText=\"CC\"\n\t\t\t\t\t\t\t\t\tsearch={this.state.search}\n\t\t\t\t\t\t\t\t\ttitle=\"Call Center\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<AppLauncherTile\n\t\t\t\t\t\t\t\t\tdescription=\"Areas of Focus are used to track customer support for your brand and ensure high quality support\"\n\t\t\t\t\t\t\t\t\ticonBackgroundColor=\"#69bad0\"\n\t\t\t\t\t\t\t\t\ticonText=\"CS\"\n\t\t\t\t\t\t\t\t\tsearch={this.state.search}\n\t\t\t\t\t\t\t\t\ttitle=\"Customer Support Community\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</AppLauncherExpandableSection>\n\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t\t\t<AppLauncherExpandableSection title=\"All Items\">\n\t\t\t\t\t\t\t\t<AppLauncherLink search={this.state.search}>\n\t\t\t\t\t\t\t\t\tAccounts\n\t\t\t\t\t\t\t\t</AppLauncherLink>\n\t\t\t\t\t\t\t\t<AppLauncherLink search={this.state.search}>\n\t\t\t\t\t\t\t\t\tAnnouncements\n\t\t\t\t\t\t\t\t</AppLauncherLink>\n\t\t\t\t\t\t\t\t<AppLauncherLink search={this.state.search}>\n\t\t\t\t\t\t\t\t\tApprovals\n\t\t\t\t\t\t\t\t</AppLauncherLink>\n\t\t\t\t\t\t\t\t<AppLauncherLink search={this.state.search}>\n\t\t\t\t\t\t\t\t\tCampaigns\n\t\t\t\t\t\t\t\t</AppLauncherLink>\n\t\t\t\t\t\t\t\t<AppLauncherLink search={this.state.search}>\n\t\t\t\t\t\t\t\t\tCases\n\t\t\t\t\t\t\t\t</AppLauncherLink>\n\t\t\t\t\t\t\t\t<AppLauncherLink search={this.state.search}>\n\t\t\t\t\t\t\t\t\tCoaching\n\t\t\t\t\t\t\t\t</AppLauncherLink>\n\t\t\t\t\t\t\t\t<AppLauncherLink search={this.state.search}>\n\t\t\t\t\t\t\t\t\tContacts\n\t\t\t\t\t\t\t\t</AppLauncherLink>\n\t\t\t\t\t\t\t</AppLauncherExpandableSection>\n\t\t\t\t\t\t</AppLauncher>\n\t\t\t\t\t</GlobalNavigationBarRegion>\n\t\t\t\t</GlobalNavigationBar>\n\t\t\t</IconSettings>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport IconSettings from '@salesforce/design-system-react/components/icon-settings';\n\nReactDOM.render(\n  <IconSettings iconPath=\"/assets/icons\">\n    <App />\n  </IconSettings>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}