{"version":3,"sources":["../../../../.tmp-es/components/utilities/utility-icon/svg.jsx"],"names":["React","Svg","paths","Array","map","item","circles","ellipses","groups","getShapes","data","shapes","g","push","getGroups","ellipse","getEllipses","circle","getCircles","path","getPaths","props","viewBox","rest","className","name","style","getSVG","Component"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\nimport React from 'react';\n\nclass Svg extends React.Component {\n\tstatic displayName = 'Svg';\n\n\tgetPaths = (paths) => {\n\t\tif (paths instanceof Array) {\n\t\t\treturn paths.map((item) => <path {...item} />);\n\t\t}\n\t\treturn <path key=\"pathSVG\" {...paths} />;\n\t};\n\n\tgetCircles = (circles) => {\n\t\tif (circles instanceof Array) {\n\t\t\treturn circles.map((item) => <circle {...item} />);\n\t\t}\n\t\treturn <circle key=\"circleSVG\" {...circles} />;\n\t};\n\n\tgetEllipses = (ellipses) => {\n\t\tif (ellipses instanceof Array) {\n\t\t\treturn ellipses.map((item) => <ellipse {...item} />);\n\t\t}\n\t\treturn <ellipse key=\"ellipseSVG\" {...ellipses} />;\n\t};\n\n\tgetGroups = (groups) => {\n\t\tif (groups instanceof Array) {\n\t\t\treturn groups.map((item) => <g>{this.getShapes(item)}</g>);\n\t\t}\n\n\t\treturn <g key=\"groupsSVG\">{this.getShapes(groups)}</g>;\n\t};\n\n\tgetShapes = (data) => {\n\t\tconst shapes = [];\n\n\t\tif (data) {\n\t\t\tif (data.g) {\n\t\t\t\t// eslint-disable-next-line fp/no-mutating-methods\n\t\t\t\tshapes.push(this.getGroups(data.g));\n\t\t\t}\n\n\t\t\tif (data.ellipse) {\n\t\t\t\t// eslint-disable-next-line fp/no-mutating-methods\n\t\t\t\tshapes.push(this.getEllipses(data.ellipse));\n\t\t\t}\n\n\t\t\tif (data.circle) {\n\t\t\t\t// eslint-disable-next-line fp/no-mutating-methods\n\t\t\t\tshapes.push(this.getCircles(data.circle));\n\t\t\t}\n\n\t\t\tif (data.path) {\n\t\t\t\t// eslint-disable-next-line fp/no-mutating-methods\n\t\t\t\tshapes.push(this.getPaths(data.path));\n\t\t\t}\n\t\t}\n\t\treturn shapes;\n\t};\n\n\tgetSVG = ({ viewBox, ...rest }, props) => (\n\t\t<svg\n\t\t\taria-hidden={props['aria-hidden']}\n\t\t\tclassName={props.className}\n\t\t\tviewBox={viewBox}\n\t\t\tname={props.name}\n\t\t\tstyle={props.style}\n\t\t>\n\t\t\t{this.getShapes(rest)}\n\t\t</svg>\n\t);\n\n\trender() {\n\t\tconst { data, ...props } = this.props;\n\n\t\treturn data ? this.getSVG(data, props) : null;\n\t}\n}\n\nexport default Svg;\n"],"file":"svg.js"}