{"ast":null,"code":"/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\nimport classNames from 'classnames'; // Translates the prop into a string popper can use https://popper.js.org/popper-documentation.html#Popper.placements\n\nvar mapPropToPopperPlacement = function mapPropToPopperPlacement(propString) {\n  var placement;\n\n  switch (propString) {\n    case 'top left':\n      placement = 'top-start';\n      break;\n\n    case 'top right':\n      placement = 'top-end';\n      break;\n\n    case 'right top':\n      placement = 'right-start';\n      break;\n\n    case 'right bottom':\n      placement = 'right-end';\n      break;\n\n    case 'bottom left':\n      placement = 'bottom-start';\n      break;\n\n    case 'bottom right':\n      placement = 'bottom-end';\n      break;\n\n    case 'left top':\n      placement = 'left-start';\n      break;\n\n    case 'left bottom':\n      placement = 'left-end';\n      break;\n\n    default:\n      placement = propString;\n  }\n\n  return placement;\n};\n\nvar getNubbinClassName = function getNubbinClassName(align) {\n  var popperData = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (popperData.flipped) {\n    return classNames({\n      'slds-nubbin_top': align === 'top',\n      'slds-nubbin_top-left': align === 'top left',\n      'slds-nubbin_top-right': align === 'top right',\n      'slds-nubbin_bottom': align === 'bottom',\n      'slds-nubbin_bottom-left': align === 'bottom left',\n      'slds-nubbin_bottom-right': align === 'bottom right',\n      'slds-nubbin_left': align === 'left',\n      'slds-nubbin_left-bottom': align === 'left bottom',\n      'slds-nubbin_left-top': align === 'left top',\n      'slds-nubbin_right': align === 'right',\n      'slds-nubbin_right-bottom': align === 'right bottom',\n      'slds-nubbin_right-top': align === 'right top'\n    });\n  }\n\n  return classNames({\n    'slds-nubbin_top': align === 'bottom',\n    'slds-nubbin_top-left': align === 'bottom left',\n    'slds-nubbin_top-right': align === 'bottom right',\n    'slds-nubbin_bottom': align === 'top',\n    'slds-nubbin_bottom-left': align === 'top left',\n    'slds-nubbin_bottom-right': align === 'top right',\n    'slds-nubbin_left': align === 'right',\n    'slds-nubbin_left-bottom': align === 'right bottom',\n    'slds-nubbin_left-top': align === 'right top',\n    'slds-nubbin_right': align === 'left',\n    'slds-nubbin_right-bottom': align === 'left bottom',\n    'slds-nubbin_right-top': align === 'left top'\n  });\n};\n\nvar DISTANCE_OFFSET = 1.5; // 'rem'\n\nvar NUBBIN_SIZE = 1; // 'rem'\n\nvar ROTATED_HEIGHT = NUBBIN_SIZE / Math.sqrt(2); // 'rem'\n\n/*\n*\n*\n*\n*\n*/\n// FIXME - still need to account for border shadow of 2px. probably only needs to be added to the rotated height.\n// TODO - should we convert all rem to pixels right from the get go? Keep units consistent. Memoize the values for perf?\n\nvar getNubbinMargins = function getNubbinMargins() {\n  var popperData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var placement = popperData.placement;\n  var top = 0;\n  var left = 0;\n  var DISTANCE_OFFSET_PX = 16 * DISTANCE_OFFSET; // FIXME - actually do a real convert based on font size.\n\n  var ROTATED_HEIGHT_PX = 16 * ROTATED_HEIGHT; // FIXME - actually do a real convert based on font size.\n\n  var halfWidth = popperData.offsets.reference.width * 0.5;\n  var halfHeight = popperData.offsets.reference.height * 0.5;\n\n  if (placement === 'top') {\n    top = ROTATED_HEIGHT_PX * -1;\n  } else if (placement === 'top-end') {\n    top = ROTATED_HEIGHT_PX * -1;\n    left = DISTANCE_OFFSET_PX - halfWidth;\n  } else if (placement === 'top-start') {\n    top = ROTATED_HEIGHT_PX * -1;\n    left = halfWidth - DISTANCE_OFFSET_PX;\n  }\n\n  if (placement === 'bottom') {\n    top = ROTATED_HEIGHT_PX;\n  } else if (placement === 'bottom-end') {\n    top = ROTATED_HEIGHT_PX;\n    left = DISTANCE_OFFSET_PX - halfWidth;\n  } else if (placement === 'bottom-start') {\n    top = ROTATED_HEIGHT_PX;\n    left = halfWidth - DISTANCE_OFFSET_PX;\n  }\n\n  if (placement === 'right') {\n    left = ROTATED_HEIGHT_PX;\n  } else if (placement === 'right-end') {\n    left = ROTATED_HEIGHT_PX;\n    top = DISTANCE_OFFSET_PX - halfHeight;\n  } else if (placement === 'right-start') {\n    left = ROTATED_HEIGHT_PX;\n    top = halfHeight - DISTANCE_OFFSET_PX;\n  }\n\n  if (placement === 'left') {\n    left = ROTATED_HEIGHT_PX * -1;\n  } else if (placement === 'left-end') {\n    left = ROTATED_HEIGHT_PX * -1;\n    top = DISTANCE_OFFSET_PX - halfHeight;\n  } else if (placement === 'left-start') {\n    left = ROTATED_HEIGHT_PX * -1;\n    top = halfHeight - DISTANCE_OFFSET_PX;\n  }\n\n  return {\n    left: left,\n    top: top\n  };\n};\n\nexport { getNubbinMargins, getNubbinClassName, mapPropToPopperPlacement };","map":null,"metadata":{},"sourceType":"module"}