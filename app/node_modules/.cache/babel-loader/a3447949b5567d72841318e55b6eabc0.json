{"ast":null,"code":"/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n/* eslint-disable import/no-mutable-exports */\n\n/* eslint-disable max-len */\nimport deprecatedProperty from '../../utilities/warning/deprecated-property';\nimport sunsetProperty from '../../utilities/warning/sunset-property'; // import oneOfRequiredProperty from '../../../utilities/warning/one-of-required-property';\n\nimport onlyOneOfProperties from '../../utilities/warning/only-one-of-properties';\nimport getComponentDocFn from '../../utilities/get-component-doc';\nimport { INPUT, SEARCH } from '../../utilities/constants';\n\nvar checkProps = function checkProps() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  checkProps = function checkProps(COMPONENT, props, jsonDoc) {\n    var createDocUrl = getComponentDocFn(jsonDoc);\n\n    if (COMPONENT === INPUT) {\n      var iconDeprecatedMessage = \"Please use `iconLeft` and `iconRight` to pass in a customized <Icon> component. \".concat(createDocUrl()); // Deprecated and changed to another property\n\n      deprecatedProperty(COMPONENT, props.assistiveText.fieldLevelHelpButton, 'assistiveText.fieldLevelHelpButton', undefined, \"Please pass a `Tooltip` component into `fieldLevelHelpTooltip` with `assistiveText.triggerLearnMoreIcon`.\");\n      deprecatedProperty(COMPONENT, props.iconCategory, 'iconCategory', undefined, iconDeprecatedMessage);\n      deprecatedProperty(COMPONENT, props.iconName, 'iconName', undefined, iconDeprecatedMessage);\n      deprecatedProperty(COMPONENT, props.iconPosition, 'iconPosition', undefined, iconDeprecatedMessage);\n      deprecatedProperty(COMPONENT, props.iconAssistiveText, 'iconAssistiveText', undefined, iconDeprecatedMessage);\n      deprecatedProperty(COMPONENT, props.onIconClick, 'onIconClick', undefined, iconDeprecatedMessage);\n\n      if (typeof props.assistiveText === 'string') {\n        sunsetProperty(COMPONENT, props.assistiveText, 'assistiveText', \"AssistiveText as a string has been deprecated and is now an object to allow for multiple uses in the component. Please use either assistiveText.label or assistiveText.spinner. \".concat(createDocUrl('assistiveText')));\n      }\n\n      onlyOneOfProperties(COMPONENT, {\n        'assistiveText.label': props.assistiveText && props.assistiveText.label,\n        label: props.label\n      }, createDocUrl('assistiveText'));\n      onlyOneOfProperties(COMPONENT, {\n        fixedTextLeft: props.fixedTextLeft,\n        fixedTextRight: props.fixedTextRight\n      }, createDocUrl('assistiveText'));\n      /*\n      * Once we support horizontal labels, then I think we can enable this check\n      *\n      if (!props.inlineEditTrigger) {\n      \toneOfRequiredProperty(COMPONENT, {\n      \t\tassistiveText: props.assistiveText,\n      \t\tlabel: props.label\n      \t});\n      }\n      */\n    } else if (COMPONENT === SEARCH) {\n      if (typeof props.assistiveText === 'string') {\n        sunsetProperty(COMPONENT, props.assistiveText, 'assistiveText', \"`assistiveText` as a string has been deprecated and is now an object to allow for multiple uses in the component. Please use `assistiveText.label` instead. \".concat(createDocUrl('assistiveText')));\n      }\n    }\n  };\n}\n\nexport default checkProps;","map":null,"metadata":{},"sourceType":"module"}