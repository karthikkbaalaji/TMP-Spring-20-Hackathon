{"ast":null,"code":"/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n/* eslint-disable import/no-mutable-exports */\n// This function will deliver an error message to the browser console when all of the props passed in are undefined (falsey).\nimport warning from 'warning';\n\nvar oneOfComponent = function oneOfComponent() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  var hasWarned = {};\n\n  oneOfComponent = function oneOfComponent(control, props, propName, allowedComponents, comment) {\n    var additionalComment = comment ? \" \".concat(comment) : '';\n    var componentType;\n\n    if (typeof props[propName].type === 'string') {\n      componentType = props[propName].type;\n    } else {\n      componentType = props[propName].type.displayName;\n    }\n\n    var allowedComponentFound = allowedComponents.indexOf(componentType) > -1;\n\n    if (!hasWarned[control]) {\n      /* eslint-disable max-len */\n      warning(allowedComponentFound, \"[Design System React] \".concat(control, \" requires that prop '\").concat(propName, \"' is an instance of one of the following components: \").concat(allowedComponents.join(', '), \". An instance of '\").concat(componentType, \"' was given.\").concat(additionalComment));\n      /* eslint-enable max-len */\n\n      hasWarned[control] = !!allowedComponentFound;\n    }\n  };\n}\n\nexport default oneOfComponent;","map":null,"metadata":{},"sourceType":"module"}