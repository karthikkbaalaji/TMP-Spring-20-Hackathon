{"ast":null,"code":"/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n/* eslint-disable import/no-mutable-exports */\n\n/* eslint-disable max-len */\n// This function will deliver an error message to the browser console about the future of a removal and moving of a property's valid value to another prop. This makes the most sense to be used with `oneOf` prop types.\nimport warning from 'warning';\n\nvar deprecated = function deprecatedFunction() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  var hasWarned = {};\n\n  deprecated = function deprecatedFunction(control, _ref, comment) {\n    var propAsString = _ref.propAsString,\n        propValue = _ref.propValue,\n        deprecatedPropValue = _ref.deprecatedPropValue,\n        replacementPropAsString = _ref.replacementPropAsString,\n        replacementPropAsValue = _ref.replacementPropAsValue,\n        log = _ref.log;\n    var additionalComment = comment ? \" \".concat(comment) : '';\n    var warnOnFirstOccurrenceKey = control + propAsString + deprecatedPropValue;\n    var triggerWarning = propValue === deprecatedPropValue;\n    var replacementSentence = deprecatedPropValue && replacementPropAsString && replacementPropAsValue ? \" Replace `\".concat(propAsString, \"=\\\"\").concat(deprecatedPropValue, \"\\\"` with `\").concat(replacementPropAsString, \"=\\\"\").concat(replacementPropAsValue, \"\\\"`.\") : '';\n\n    if (!hasWarned[warnOnFirstOccurrenceKey]) {\n      var message = \"[Design System React] The value of `\".concat(deprecatedPropValue, \"`, for prop `\").concat(propAsString, \"` will be removed in the next major version of \").concat(control, \". Please update your props.\").concat(replacementSentence).concat(additionalComment);\n\n      if (triggerWarning && log) {\n        log({\n          message: message\n        });\n      } else {\n        warning(!triggerWarning, // false value triggers warning\n        message);\n      } // store global flag to limit warnings to first issue\n\n\n      hasWarned[warnOnFirstOccurrenceKey] = triggerWarning;\n    }\n  };\n}\n\nexport default deprecated;","map":null,"metadata":{},"sourceType":"module"}